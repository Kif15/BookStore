image: maven:3.9.5-eclipse-temurin-21

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository"
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
  GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task


cache:
  paths:
    - .m2/repository
    - target/

stages:
  - build
  - test
  - package
  - sonar-analysis
  - deploy

default:
  tags:
    - hva

build:
  stage: build
  script:
    - mvn clean compile
  artifacts:
    paths:
      - target/
    expire_in: 1 hour

test:
  stage: test
  script:
    - mvn test
  artifacts:
    reports:
      junit:
        - target/surefire-reports/TEST-*.xml
    when: always

package:
  stage: package
  script:
    - mvn package -DskipTests
  artifacts:
    paths:
      - target/*.jar
    expire_in: 1 week

sonar-analysis:
  stage: sonar-analysis
  
  cache:
    policy: pull-push
    key: "sonar-cache-$CI_COMMIT_REF_SLUG"
    paths:
      - "${SONAR_USER_HOME}/cache"
      - sonar-scanner/

  script:
    - mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
  allow_failure: true
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_COMMIT_BRANCH == 'main'
    - if: $CI_COMMIT_BRANCH == 'develop'

deploy:dev:
  stage: deploy
  dependencies:
    - package
  before_script:
    - apt-get update -qq
    - apt-get install -y sshpass
  script:
    - echo "Deploying to DEV environment on OEGE server..."
    - sshpass -p "$OEGE_SSH_PASSWORD" scp -o StrictHostKeyChecking=no target/*.jar $OEGE_SSH_USER@$OEGE_SSH_HOST:$OEGE_DEPLOY_PATH_DEV/webstore.jar
    - sshpass -p "$OEGE_SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $OEGE_SSH_USER@$OEGE_SSH_HOST "cd $OEGE_DEPLOY_PATH_DEV && pkill -f 'webstore.jar' || true"
    - sshpass -p "$OEGE_SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $OEGE_SSH_USER@$OEGE_SSH_HOST "cd $OEGE_DEPLOY_PATH_DEV && nohup java -jar webstore.jar --server.port=8081 > app.log 2>&1 &"
    - sleep 5
    - echo "Application deployed to http://oege.ie.hva.nl:8081"
  environment:
    name: development
    url: http://oege.ie.hva.nl:8081
  only:
    - develop
    - dev

deploy:stage:
  stage: deploy
  dependencies:
    - package
  before_script:
    - apt-get update -qq
    - apt-get install -y sshpass
  script:
    - echo "Deploying to TEST environment on OEGE server..."
    - sshpass -p "$OEGE_SSH_PASSWORD" scp -o StrictHostKeyChecking=no target/*.jar $OEGE_SSH_USER@$OEGE_SSH_HOST:$OEGE_DEPLOY_PATH_TEST/webstore.jar
    - sshpass -p "$OEGE_SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $OEGE_SSH_USER@$OEGE_SSH_HOST "cd $OEGE_DEPLOY_PATH_TEST && pkill -f 'webstore.jar' || true"
    - sshpass -p "$OEGE_SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $OEGE_SSH_USER@$OEGE_SSH_HOST "cd $OEGE_DEPLOY_PATH_TEST && nohup java -jar webstore.jar --server.port=8082 > app.log 2>&1 &"
    - sleep 5
    - echo "Application deployed to http://oege.ie.hva.nl:8082"
  environment:
    name: testing
    url: http://oege.ie.hva.nl:8082
  only:
    - stage

deploy:prod:
  stage: deploy
  dependencies:
    - package
  before_script:
    - apt-get update -qq
    - apt-get install -y sshpass
  script:
    - echo "Deploying to PRODUCTION environment on OEGE server..."
    - sshpass -p "$OEGE_SSH_PASSWORD" scp -o StrictHostKeyChecking=no target/*.jar $OEGE_SSH_USER@$OEGE_SSH_HOST:$OEGE_DEPLOY_PATH_PROD/webstore.jar
    - sshpass -p "$OEGE_SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $OEGE_SSH_USER@$OEGE_SSH_HOST "cd $OEGE_DEPLOY_PATH_PROD && pkill -f 'webstore.jar' || true"
    - sshpass -p "$OEGE_SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $OEGE_SSH_USER@$OEGE_SSH_HOST "cd $OEGE_DEPLOY_PATH_PROD && nohup java -jar webstore.jar --server.port=8083 > app.log 2>&1 &"
    - sleep 5
    - echo "Application deployed to http://oege.ie.hva.nl:8083"
  environment:
    name: production
    url: http://oege.ie.hva.nl:8083
  only:
    - main
    - master